overwrite: true

definitions:
    copyright: &top-comment
        content: >
            /**
             * NOTE: THIS IS AN AUTO-GENERATED FILE. DO NOT MODIFY IT DIRECTLY.
             * USE `yarn build:schema-types` or `yarn build`.
             */

            /* eslint-disable */

            /* tslint:disable */

            // @ts-nocheck
    copyright_gql: &top-comment-gql
        content: >
            # NOTE: THIS IS AN AUTO-GENERATED FILE. DO NOT MODIFY IT DIRECTLY.

            # USE `yarn build:schema-types` or `yarn build`.


schema:
    - "directive @client on FIELD_DEFINITION | ARGUMENT_DEFINITION | QUERY"
    - "**/schema.{graphql,gql,graphqls}"
    - "**/schemas.{graphql,gql,graphqls}"
    - "**/schemas/*.{graphql,gql,graphqls}"
    - "!./schema.graphql"

documents:
    - "**/{fragments,mutations,queries}/*.{graphql,gql}"
    - "!./schema.graphql"
    - "!./**/stores/**/*.{graphql,gql,graphqls}"

generates:
    ./schema.graphql:
        plugins:
            - add: *top-comment-gql
            - schema-ast
        config:
            includeDirectives: true
            federation: true

    ./graphql.ts:
        plugins:
            - add: *top-comment
            - add:
                  content: >
                      type ResolverTypeWrapperSignatureContext<T = any> = {
                          __context?: T
                      };

                      type ResolverContext<T = any> = {
                          context?: T
                      };
            - typescript
            - "@pwa-concept/cli/lib/utils/codegen/typescript-resolvers.js"
        config:
            contextType: ResolverContext
            declarationKind: 'interface'
            customResolverFn: "(parent: TParent , args: TArgs, context: TContext, info: GraphQLResolveInfo) => Promise<TResult> | TResult"
            resolverTypeWrapperSignature: "Promise<ResolverTypeWrapperSignatureContext & T> | (ResolverTypeWrapperSignatureContext & T)"

    ./:
        preset: near-operation-file
        presetConfig:
            extension: .tsx
            baseTypesPath: ./graphql.ts
        config:
            withHooks: true
            apolloReactHooksImportFrom: "@pwa-concept/core/graphql/hooks"
        plugins:
            - add: *top-comment
            - typescript-operations
            - typescript-react-apollo
