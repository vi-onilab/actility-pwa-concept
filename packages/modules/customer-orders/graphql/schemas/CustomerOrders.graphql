extend type Query {
    customerOrderLast: CustomerOrder
    customerOrder(id: ID): CustomerOrder
    customerOrders(input: CustomerOrdersInput): CustomerOrdersOutput
}

input CustomerOrdersInput {
    page: Int
    size: Int
    number: ID
}

type CustomerOrdersOutput {
    items: [CustomerOrder]
    pagination: Pagination
}

type CustomerOrder {
    id: ID
    number: String
    status: String
    date: Int
    shippingAddress: CustomerOrderAddress
    billingAddress: CustomerOrderAddress
    totals: CustomerOrderTotals
    shippingMethod: String
    paymentMethod: String
    products: [CustomerOrderProduct]
}

type CustomerOrderAddress {
    firstName: String
    lastName: String
    telephone: String
    city: String
    company: String
    street: String
    countryCode: Int
    postcode: String
}

type CustomerOrdersPageInfo {
    page: Int
    size: Int
    total: Int
}

type CustomerOrderTotals {
    total: Int
    subtotal: Int
    totalShipping: Int
    taxes: [CustomerOrderTotalsTax]
    discounts: [CustomerOrderDiscount]
}

type CustomerOrderTotalsTax {
    rate: Int
    title: String
    tax: Int
}

type CustomerOrderProduct {
    id: ID
    url: String
    name: String
    discounts: [CustomerOrderDiscount]
    status: String
    options: [CustomerOrderProductOption]
}

type CustomerOrderProductOption {
    label: String
    value: String
}

type CustomerOrderDiscount {
    label: String
    value: String
}
